// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Game = (function(_super) {
    __extends(Game, _super);

    function Game() {
      return Game.__super__.constructor.apply(this, arguments);
    }

    Game.prototype.initialize = function() {
      var deck;
      this.set('dealerTurn', false);
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      (this.get('playerHand')).on('over21', (function(_this) {
        return function(e) {
          return _this.handleHand(e);
        };
      })(this));
      (this.get('playerHand')).on('stand', (function(_this) {
        return function(e) {
          return _this.handleStand(e);
        };
      })(this));
      (this.get('dealerHand')).on('over21', (function(_this) {
        return function(e) {
          return _this.handleHand(e);
        };
      })(this));
      return (this.get('dealerHand')).on('stand', (function(_this) {
        return function(e) {
          return _this.handleStand(e);
        };
      })(this));
    };

    Game.prototype.handleHand = function(hand) {
      var result;
      if (hand === this.get('playerHand')) {
        result = this.get('dealerHand');
      }
      if (hand === this.get('dealerHand')) {
        result = this.get('playerHand');
      }
      return this.triggerWinner(result);
    };

    Game.prototype.handleStand = function(hand) {
      var result;
      if (hand === this.get('dealerHand')) {
        result = this.playerIsWinning() ? this.get('playerHand') : this.get('dealerHand');
        return this.triggerWinner(result);
      } else {
        return this.dealerPlay();
      }
    };

    Game.prototype.playerIsWinning = function() {
      var callback;
      callback = function(value) {
        if (value <= 21) {
          return value;
        } else {
          return 0;
        }
      };
      return _.max(this.get('playerHand').scores(), callback) > _.max(this.get('dealerHand').scores(), callback);
    };

    Game.prototype.dealerPlay = function() {
      var hand;
      this.set('dealerTurn', true);
      hand = this.get('dealerHand');
      hand.reveal();
      while (this.playerIsWinning() && this.get('dealerTurn')) {
        hand.hit();
      }
      if (this.get('dealerTurn')) {
        return hand.stand();
      }
    };

    Game.prototype.triggerWinner = function(hand) {
      return this.trigger('winner', hand);
    };

    Game.prototype.newGame = function() {
      this.initialize();
      return this.trigger('newGame');
    };

    return Game;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=Game.js.map
