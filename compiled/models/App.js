// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      var game;
      this.set('game', game = new Game());
      this.set('chips', 10);
      this.set('bet', 1);
      return this.get('game').on('winner', (function(_this) {
        return function(e) {
          return _this.handleWinner(e);
        };
      })(this));
    };

    App.prototype.handleWinner = function(hand) {
      if (hand === this.get('game').get('dealerHand')) {
        console.log('dealer won');
        this.set('chips', this.get('chips') - this.get('bet'));
      } else {
        console.log('player won');
        this.set('chips', this.get('chips') + this.get('bet'));
      }
      this.set('bet', 1);
      this.get('game').set('dealerTurn', false);
      if (this.get('chips') === 0) {
        this.gameOver();
      }
      return this.trigger('gameOver');
    };

    App.prototype.gameOver = function() {
      alert('The Game Is Over');
      return location.reload();
    };

    App.prototype.raiseBet = function() {
      if (this.get('bet') + 1 <= this.get('chips')) {
        return this.set('bet', this.get('bet') + 1);
      }
    };

    return App;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=App.js.map
